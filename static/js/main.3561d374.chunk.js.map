{"version":3,"sources":["utilities.js","SongsView.js","PlaylistsView.js","index.js"],"names":["getQueryVariable","query","variable","vars","split","i","length","pair","decodeURIComponent","console","log","serverUrl","parseName","title","newTitle","replace","blacklist","removeAfter","trim","toLowerCase","song","scrollOptions","damping","thumbMinSize","renderByPixels","document","alwaysShowTracks","continuousScrolling","overscrollOptions","enable","effect","navigator","userAgent","match","maxOverscroll","glowColor","MergeTypeRadio","props","className","data-tooltip","helpText","data-tooltip-persisten","type","name","id","text","defaultChecked","htmlFor","onClick","ExportButton","logoUrls","logoMult","logoSizes","logoSize","this","platform","logoUrl","export","disabled","alt","src","width","height","React","Component","SongItem","img","artists","SongsView","state","included","Array","excluded","songsItems","songs","map","val","idx","imgUrl","track","album","images","url","e","songId","x","join","toString","playlistId","snippet","thumbnails","default","videoOwnerChannelTitle","etag","mergeHelp","changeMergeType","Scrollbar","init","getElementById","plugins","overscroll","axios","require","PlaylistItemExtra","PlaylistItem","songsNum","extra","decorate","bind","toggle","get","params","endpoint","then","catch","error","JSON","stringify","part","response","sendSongs","data","tracks","setState","total","items","contentDetails","itemCount","medium","slice","extraInfo","remove","newState","PlaylistsView","textValue","handleChange","addPlaylist","watchEnter","playlistItems","playlists","removePlaylist","showHelp","placeholder","value","onChange","onKeyPress","playlistLink","s","URL","search","substring","includes","parsePlatform","parsePlaylistId","event","target","evt","charCode","use","OverscrollPlugin","Main","exporting","hashParams","window","location","hash","regParams","allSongs","mergeType","helping","addSongs","authorize","convertPlaylist","convertSong","toggleHelp","style","opacity","pointerEvents","transform","filterSongs","prevRes","a","newTracks","Object","assign","key","newSongs","concat","next","res","paramsObj","maxResults","nextPageToken","pageToken","newPLaylists","urlParams","URLSearchParams","client_id","response_type","redirect_uri","origin","scope","paramsStr","entries","k","v","encodeURIComponent","href","parse","access_token","headers","Authorization","meRes","createRes","method","description","playlistSongs","page","Math","ceil","pageSongs","uris","addRes","playlist","toPlatform","theseSongs","filter","convertedSongsPromises","Promise","all","convertedSongs","songsIds","push","uri","resolve","reject","songName","Error","_filterType","filterType","getSongId","allSongIds","singleSongIds","Set","songIds","keys","retSongs","j","ReactDOM","render"],"mappings":"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","file":"static/js/main.3561d374.chunk.js","sourcesContent":["\nconst paramify = (params) => \"?\"+Object.entries(params).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n\n// https://stackoverflow.com/questions/2090551/parse-query-string-in-javascript\nfunction getQueryVariable(query, variable) {\n  var vars = query.split('&');\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n  console.log('Query variable %s not found', variable);\n}\n\n\n// cost serverUrl = \"http://192.168.43.62:3003\"; // hotspot\n// const serverUrl = \"http://10.1.1.193:3003\"; // home\nconst serverUrl = \"https://sheltered-caverns-34537.herokuapp.com\"; // heroku\n\n\n\n// takes a title and tries to parse the name of the song (or a search term)\n// returns a list of ranked possibilities\nconst parseName = title=>{\n  // first makes it safe\n  // remove things in brackets\n  // remove things from blacklist (e.g. music video, feat)\n  // remove anything after 'ft.' 'feat' 'prod\n\n  // remove brackets [] and () and their content\n  let newTitle = title.replace(/\\([^\\)]*\\)/g, '');\n  newTitle = newTitle.replace(/\\[[^\\]]*\\]/g, '');\n\n  // making it safe\n  newTitle = sanitizeString(newTitle);\n  // remove duplicate spaces\n  newTitle = newTitle.replace( /\\s\\s+/g, ' ' );\n  \n  const blacklist = [\n    \"official music video\",\n    \"music video\",\n    \"official mv\",\n    \"video\",\n    \"official video\",\n    \"official visualizer\",\n    \"visualizer\",\n    \"audio\",\n    \"official audio\",\n  ];\n  const removeAfter = [\"ft.\", \" feat\", \"prod\"];\n\n  newTitle = newTitle.toLowerCase();\n\n  for(let i=0; i<blacklist.length;i++){\n    newTitle = newTitle.replace(blacklist[i], \"\");\n  }\n  // remove anything after ft or feat (feat gets featuring too)\n  for(let i=0; i<removeAfter.length;i++){\n    newTitle = newTitle.split(removeAfter[i])[0];\n  }\n  newTitle = newTitle.trim()\n\n\n  let song = newTitle.split(\"-\")\n  song = song[song.length-1].trim();\n\n  // remove dashes at end so you can get song name\n  newTitle = newTitle.replace(/[\\-+]/g, '');\n  // remove double space again\n  newTitle = newTitle.replace( /\\s\\s+/g, ' ');\n  \n  return [newTitle, song]\n}\n\n// https://stackoverflow.com/questions/23187013/is-there-a-better-way-to-sanitize-input-with-javascript\nfunction sanitizeString(str){\n  str = str.replace(/[^a-z0-9áéíóúñü \\.,_-]/gim,\"\");\n  return str.trim();\n}\n\nconst scrollOptions = {\n  damping: 0.1,\n  thumbMinSize: 20,\n  renderByPixels: !('ontouchstart' in document),\n  alwaysShowTracks: false,\n  continuousScrolling: true,\n};\n\nconst overscrollOptions = {\n  enable: true,\n  effect: navigator.userAgent.match(/Android/) ? 'glow' : 'bounce',\n  damping: 0.2,\n  maxOverscroll: 150,\n  glowColor: '#222a2d',\n};\n\nexport {\n  sanitizeString,\n  parseName,\n  serverUrl,\n  getQueryVariable,\n  paramify,\n  overscrollOptions,\n  scrollOptions\n}","import React from 'react';\nimport './index.css';\nimport Scrollbar from 'smooth-scrollbar';\nimport { parseName, scrollOptions, overscrollOptions } from './utilities';\n\n\nconst MergeTypeRadio = (props) => {\n  return (\n    <span className=\"mergeTypeOuter\" data-tooltip={props.helpText} data-tooltip-persisten>\n        <input type=\"radio\" name=\"mergeType\" id={props.text} className=\"mergeTypeInput\" defaultChecked></input>\n        <label className=\"mergeTypeLabel\" htmlFor={props.text} onClick={()=>props.onClick(props.type)}>{props.text}</label>\n    </span>\n  )\n}\n\nclass ExportButton extends React.Component{\n  constructor(props){\n    super(props);\n    this.logoUrls = {\n      \"spotify\":\"/logos/spotify.png\",\n      \"download\":\"/logos/download.png\", // TODO\n      \"soundcloud\":\"/logos/soundcloud.png\", \n      \"youtube\":\"/logos/youtube.png\",\n      \"apple\":\"/logos/apple.svg\", // TODO\n    }\n    this.logoMult = 15;\n    this.logoSizes = {\n      \"spotify\":[1, 1],\n      \"download\":[1,1],\n      \"soundcloud\":[1.5, 1],\n      \"youtube\":[1.4, 1],\n      \"apple\":[1, 1]\n    }\n  }\n  render(){\n    let logoSize = this.logoSizes[this.props.platform];\n    let logoUrl = this.logoUrls[this.props.platform];\n    return (\n      <button\n        onClick={()=>this.props.export(this.props.platform)}\n        className={`exportButton noselect ${this.props.platform}Fill ${this.props.disabled ? \"disabled\":\"\"}`}\n      >\n        <img alt=\"\" src={logoUrl} width={`${logoSize[0]*this.logoMult}`} height={`${logoSize[1]*this.logoMult}`} className=\"exportButtonIcon\"></img>\n        {this.props.text}\n        \n      </button>\n    )\n  }\n}\n\nclass SongItem extends React.Component{\n  render(){\n    console.log(\"renderd songItem\")\n    return (\n      <div className=\"songItem\">\n        <img alt=\"\" src={this.props.img} className=\"songItemImg\"></img>\n        <h3 className=\"songItemTitle\">{parseName(this.props.name)[0]}</h3>\n        <p className=\"songItemArtists\">{this.props.artists}</p>    \n      </div>\n    );\n  }\n}\n\nclass SongsView extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      included: Array(0),\n      excluded: Array(0),\n    }\n  }\n  render(){\n    // generates song items\n    const songsItems = this.props.songs.map((val, idx)=>{\n      if(val.platform === \"spotify\"){\n        let imgUrl;\n        try{\n          imgUrl = val.track.album.images[2].url;\n        }catch(e){\n          imgUrl = \"/spotify-default-thumb.png\";\n        }\n        const songId = val.track.id ?? idx\n        return <SongItem \n          key={songId.toString()+val.playlistId}\n          name={val.track.name}\n          img={imgUrl}\n          artists={val.track.artists.map((x)=>x.name).join(\", \")}\n        />\n      }\n      if(val.platform === \"youtube\"){\n        return <SongItem\n          key={val.etag}\n          name={val.snippet.title}\n          img={val.snippet.thumbnails.default.url}\n          artists={val.snippet.videoOwnerChannelTitle}\n        />\n      }\n      return null; // complains if there isnt an unconditional return\n    });\n\n    const mergeHelp = {\n      all:\"Songs in ALL playlists\",\n      only:\"Songs in ONLY ONE playlist\",\n      any:\"Songs in ANY NUMBER of playlists\",\n    }\n\n    return (\n      <div className=\"halfDiv\" id=\"songsViewContainer\">\n        <div id=\"songsTopBar\">\n          <div id=\"songsTopBarInfo\">\n            <p id=\"songsNum\">{this.props.songs.length} Songs</p>\n            {/* <p id=\"songsIncluded\">+{this.state.included.length}</p> */}\n            {/* <p id=\"songsExcluded\">-{this.state.excluded.length}</p> */}\n          </div>\n\n          <div id=\"songsTopBarType\">\n            <MergeTypeRadio text=\"All\"  type=\"all\"  onClick={this.props.changeMergeType} helpText={mergeHelp.all}/>\n            <MergeTypeRadio text=\"Only\" type=\"only\" onClick={this.props.changeMergeType} helpText={mergeHelp.only}/>\n            <MergeTypeRadio text=\"Any\"  type=\"any\"  onClick={this.props.changeMergeType} helpText={mergeHelp.any}/>\n          </div>\n        </div>\n        <div id=\"songsContainer\">\n          <div>{songsItems}</div>\n        </div>\n\n        <div id=\"songsExport\">\n          <ExportButton export={this.props.export} text=\"Spotify\" platform=\"spotify\" />\n          <ExportButton export={this.props.export} text=\"Youtube\" platform=\"youtube\" disabled={true} />\n          <ExportButton export={this.props.export} text=\"Apple Music\" platform=\"apple\" disabled={true} />\n          <ExportButton export={this.props.export} text=\"Download\" platform=\"download\" disabled={false} />\n        </div>\n\n      </div>\n    )\n  }\n  componentDidUpdate(){\n    console.log(\"added scroll\")\n    Scrollbar.init(\n      document.getElementById('songsContainer'), {\n      plugins: {\n        overscroll: {...overscrollOptions},\n      },\n      ...scrollOptions\n    });\n  }\n}\n\nexport default SongsView","import React from 'react';\nimport { serverUrl, getQueryVariable, scrollOptions, overscrollOptions } from './utilities';\nimport Scrollbar from 'smooth-scrollbar';\nconst axios = require('axios'); // dont know difference between require and import\n\n\nclass PlaylistItemExtra extends React.Component{\n  render(){\n    console.log(\"rendered extra\");\n    return (\n      <div className=\"playlistItemExtra\">\n        <p>penis</p>\n      </div>\n    )\n  }\n}\n\nclass PlaylistItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      name: props.name,\n      songsNum: \"#\",\n      img: \"/loading.svg\",\n      extra:false,\n    }\n\n    this.decorate = this.decorate.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    if( this.props.platform === \"spotify\"){\n      axios.get(`${serverUrl}/spotify/`, {\n        params: {endpoint:`playlists/${this.props.id}`}\n      })\n      .then(this.decorate)\n      .catch(function (error) {\n        console.log(error);\n      })\n    }\n    if( this.props.platform === \"youtube\"){\n      axios.get(`${serverUrl}/youtube`, {\n        params: {\n          endpoint:\"playlists\",\n          query: JSON.stringify({\n            part:\"snippet,contentDetails\",\n            id:this.props.id\n          })\n        }\n      })\n      .then(this.decorate)\n      .catch(function (error) {\n        console.log(error);\n      })\n      // playlists?part=snippet&part=contentDetails&part=id&part=status&id=RDCLAK5uy_kbqXHXB9aBQaqThDKOimGGcZEPubq3znc\n  \n    }\n  }\n  decorate(response){\n    console.log(response);\n    if(this.props.platform === \"spotify\"){\n      this.props.sendSongs(response.data.tracks, this.props.platform, this.props.id);\n      this.setState({\n        name: response.data.name,\n        songsNum:response.data.tracks.total,\n        img: response.data.images[0].url\n      })\n    }\n    if(this.props.platform === \"youtube\"){\n      this.props.sendSongs(null, this.props.platform, this.props.id);\n      this.setState({\n        name:response.data.items[0].snippet.title,\n        songsNum:response.data.items[0].contentDetails.itemCount,\n        img:response.data.items[0].snippet.thumbnails.medium.url,\n      });\n    }\n    if(this.state.name.length > 30){\n      this.setState({name:this.state.name.slice(0, 23)+\"...\"})\n    }\n  }\n  render(){\n    let extraInfo = \"\";\n    if(this.state.extra){\n      extraInfo = (<PlaylistItemExtra/>);\n    }\n    return (\n      <div className=\"playlistItemOuter\">\n        <div className={`playlistItem ${this.props.platform}Border`} onClick={this.toggle}>\n          <div className=\"playlistItemMain\">\n            <img src={this.state.img} className=\"playlistItemImage\" alt=\"\"></img>\n            <div className=\"playlistItemContent\">\n              <p className=\"playlistItemTitle\">{this.state.name}</p>\n              <p className=\"playlistItemSongsNum\">{`${this.state.songsNum} songs`}</p>\n            </div>\n          </div>\n          <div className=\"playlistItemCloseDiv\">\n            <button className=\"playlistItemRemove\" onClick={this.props.remove}>\n              <img className=\"playlistItemCloseImg\" src=\"close.svg\"></img>\n            </button>\n          </div>\n        </div>\n        {extraInfo}\n      </div>\n    )\n  }\n  toggle(){\n    console.log(\"toggled\", this);\n    console.log(this.state.extra, !this.state.extra);\n    const newState = !this.state.extra;\n    this.setState({extra: newState});\n  }\n}\n\nclass PlaylistsView extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      textValue:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addPlaylist = this.addPlaylist.bind(this);\n    this.watchEnter = this.watchEnter.bind(this);\n  }\n  render(){\n    const playlistItems = this.props.playlists.map((val, idx) => {\n      const remover = ()=>this.props.removePlaylist(val.id, val.platform);\n      return <PlaylistItem\n        sendSongs={this.props.sendSongs}\n        remove={remover}\n        key={val.id+val.platform}\n        name=\"Loading...\"\n        id={val.id}\n        platform={val.platform}\n      />;\n    });\n\n    return (\n      <div className=\"halfDiv\" id=\"playlistViewContainer\">\n        <div id=\"playlistSearchContainer\" className=\"\">\n          <p id=\"playlistHelp\" onClick={this.props.showHelp}>Help</p>\n          <input\n            id=\"playlistSearch\"\n            type=\"text\"\n            placeholder=\"Playlist Link\"\n            value={this.state.textValue}\n            onChange={this.handleChange}\n            onKeyPress={this.watchEnter}>\n          </input>\n          <button id=\"playlistAdd\" type=\"button\" onClick={this.addPlaylist}>+</button> \n          {/* <span className=\"tooltiptext\"><a id=\"tooltipHelpLink\" href=\"help\">Help</a></span> */}\n        </div>\n        <div id=\"playlistsContainer\">\n          <div id=\"playlistsInnerContainer\">\n            {playlistItems}\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n  componentDidUpdate(){\n    console.log(\"added scroll\");\n    Scrollbar.init(\n      document.getElementById('playlistsContainer'), {\n      plugins: {\n        overscroll: {...overscrollOptions},\n      },\n      ...scrollOptions\n    });\n  }\n  parsePlaylistId(playlistLink, platform){\n    // returns: playlistId, platform\n    if(platform === \"spotify\"){\n      let s = playlistLink.split(\"/\");\n      return s[s.length-1].split(\"?\")[0];\n    }\n    if(platform === \"youtube\"){\n      let params = new URL(playlistLink).search.substring(1)\n      console.log(params)\n      return getQueryVariable(params, \"list\")\n    }\n  }\n  parsePlatform(playlistLink){\n    let s = playlistLink.split(\"/\");\n    if( s.includes(\"open.spotify.com\")){\n      return \"spotify\";\n    }\n    if( s.includes(\"youtube.com\") || s.includes(\"music.youtube.com\")){\n      return \"youtube\";\n    }\n  }\n  addPlaylist(){\n    let platform = this.parsePlatform(this.state.textValue);\n    let id = this.parsePlaylistId(this.state.textValue, platform);\n    this.props.addPlaylist(id, platform);\n    this.setState({textValue:\"\"});\n  }\n  handleChange(event) {\n    this.setState({textValue: event.target.value});\n  }\n  watchEnter(evt){\n    if(evt.charCode === 13){\n      this.addPlaylist();\n    }\n  }\n}\n\nexport default PlaylistsView","import Scrollbar from 'smooth-scrollbar';\nimport OverscrollPlugin from 'smooth-scrollbar/plugins/overscroll';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SongsView from './SongsView.js';\nimport PlaylistsView from './PlaylistsView.js';\nimport { serverUrl, getQueryVariable, parseName, paramify } from './utilities.js';\nconst axios = require('axios'); // dont know difference between require and import\n\nScrollbar.use(OverscrollPlugin);\n\n// to stop creating tones of playlists when testing\nconst EXPORT_SAFE = true;\n\nclass Main extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.exporting = false\n    const hashParams = window.location.hash.slice(1); // spotify redirect uses hash\n    const regParams = window.location.search.slice(1);\n    if(hashParams || regParams){\n      console.log('set exporting')\n      this.export(hashParams || regParams);\n    }\n\n    this.state = {\n      allSongs: {},\n      playlists: Array(0),\n      exporting:this.exporting,\n      mergeType:\"Any\",\n      helping:false,\n    }\n\n    this.addSongs = this.addSongs.bind(this); \n    this.addPlaylist = this.addPlaylist.bind(this);\n    this.removePlaylist = this.removePlaylist.bind(this);\n    this.export = this.export.bind(this);\n    this.authorize = this.authorize.bind(this);\n    this.convertPlaylist = this.convertPlaylist.bind(this);\n    this.convertSong = this.convertSong.bind(this);\n  }\n\n  render(){\n\n    // callback used by SongsView to set the merge type state\n    const setMergeType = type=>{this.setState({mergeType:type})}\n\n    const toggleHelp = ()=>{this.setState({helping:!this.state.helping})};\n\n    return (\n      <div id=\"main\">\n        {this.state.exporting &&\n          <div id=\"exportOverlayOuter\">\n            <div id=\"darkOverlayBackground\"></div>\n            <div id=\"darkOverlay\">\n              <h2 id=\"exportingTitle\">Exporting {this.state.allSongs.length} song(s) to {this.state.exporting}</h2>\n            </div>\n          </div>\n        }\n        <div id=\"helpOverlayOuter\">\n          <div\n            id=\"darkOverlayBackground\"\n            onClick={toggleHelp}\n            style={{opacity:this.state.helping?0.4:0, pointerEvents: this.state.helping?\"auto\":\"none\"}}>\n          </div>\n          <div id=\"darkOverlay\" style={\n            {transform:this.state.helping?\"translate(-50%, -50%)\":\"translate(-50%, -180%)\",\n            pointerEvents: this.state.helping?\"auto\":\"none\"}\n          }>\n            <h1 id=\"helpingTitle\">To get </h1>\n          </div>\n        </div>\n        <header></header>\n        <div id=\"content\">\n\n          <PlaylistsView\n            addPlaylist={this.addPlaylist}\n            sendSongs={this.addSongs}\n            playlists={this.state.playlists}\n            removePlaylist={this.removePlaylist}\n            showHelp={toggleHelp}\n          />\n          {/* make selectedSongs later */}\n          <SongsView\n            songs={this.filterSongs(this.state.allSongs, this.state.mergeType)}\n            export={this.authorize}\n            changeMergeType={setMergeType}\n          />\n\n          <hr id=\"midBreak\"></hr>\n        </div>\n      </div>\n    );\n  }\n\n  async addSongs(prevRes, platform, id){\n    // takes the previous respose, adds its songs to the songs lists\n    // then requests the next group of songs by calling its self\n    // or if no prevRes, request the first group of songs\n    console.log(prevRes);\n\n    // add the songs from prevRes\n    // adds the playlist id and platform to each track\n    if(prevRes){\n      console.log(\"had prev res\");\n      const newTracks = prevRes.items.map((val, idx) => {\n        return Object.assign(val, {playlistId:id, platform:platform})\n      })\n      let key = platform.toString()+id.toString();\n      let newSongs = {...this.state.allSongs};\n      if(key in newSongs){\n        newSongs[key] = newSongs[key].concat(newTracks)\n      }else{\n        newSongs[key] = newTracks;\n      }\n      this.setState({allSongs:newSongs});\n    }\n\n    if(platform === \"spotify\"){\n      const url = `${serverUrl}/spotify/`;\n      let endpoint;\n      if(prevRes){\n        if(prevRes.next != null){ // if you had a prevRes and there is a next\n          endpoint = prevRes.next.split(\"v1/\")[1]\n        }else{ // if you had a prevRes but there is not next\n          console.log(\"reached end of playlist\");\n          return;\n        }\n      }else{ // no prevRes\n        endpoint = `playlists/${id}/tracks/?offset=0&limit=100`;\n      }\n      let res = await axios.get(url, {\n        params:{\n          endpoint:endpoint\n        }\n      });\n      await this.addSongs(res.data, platform, id);\n    }\n    if(platform === \"youtube\"){\n      let paramsObj = {\n        part:\"snippet\",\n        maxResults:50,\n        playlistId:id,\n      }\n\n      if(prevRes){ // dont do for first request\n        if(prevRes.nextPageToken){\n          paramsObj.pageToken = prevRes.nextPageToken;\n        }\n      }\n\n      // do a request if either there wasnt a previose request (prevRes is null)\n      // or there is a nextPageToken from the last request\n      if(paramsObj.pageToken || !(prevRes)){\n        let res = await axios.get(`${serverUrl}/youtube/`, {\n          params: {\n            endpoint:\"playlistItems\",\n            query:JSON.stringify(paramsObj)\n          }\n        })\n        await this.addSongs(res.data, platform, id)\n      }\n    }\n    return this.state.allSongs;\n  }\n\n  addPlaylist(id, platform){\n    const newPLaylists = this.state.playlists.concat({id:id, platform:platform});\n    this.setState({playlists: newPLaylists});\n  }\n\n  removePlaylist(id, platform){\n    // finds the index of the playlist with given id and platform and removes it\n    let idx = -1;\n    for(let i = 0; i < this.state.playlists.length; i++){\n      console.log(this.state.playlists[i], {id, platform})\n      if(this.state.playlists[i].id === id && this.state.playlists[i].platform === platform){\n        console.log(\"found match\");\n        idx = i;\n      }\n    }\n    if(idx === -1){\n      console.log(\"invalid id to remove\");\n      return;\n    }\n    const newPLaylists = [...this.state.playlists.slice(0, idx), ...this.state.playlists.slice(idx+1)];\n    // const newSongs = this.state.allSongs.filter( s=> !(s.playlistId===id && s.platform===platform) );\n    const key = platform.toString()+id.toString()\n    const { [key]: _, ...newSongs } = this.state.allSongs;\n    console.log(newSongs.length);\n    this.setState({playlists:newPLaylists, allSongs:newSongs});\n  }\n\n  // first step of exporting, redirects to spotify, gives a url to return to\n  // and a state to have as params on return\n  authorize(platform){\n    console.log(platform);\n    const urlParams = new URLSearchParams(window.location.search);\n    console.log(urlParams);\n    if(platform === \"spotify\"){\n      const paramsObj = {\n        client_id:'e9901c5f654f4f58abb0d07a723dfd30',\n        response_type:'token',\n        redirect_uri:window.location.origin,\n        state:JSON.stringify({exporting:\"spotify\", playlists:this.state.playlists, mergeType:this.state.mergeType}),\n        scope:\"playlist-modify-private playlist-modify-public\",\n      }\n      const paramsStr = paramify(paramsObj);\n      window.location.href = \"https://accounts.spotify.com/authorize\"+paramsStr;\n    }\n  }\n\n  // called after the return from spotify auth\n  async export(params){\n\n    // called when there are hash or querey parameters to export a playlist\n    if(getQueryVariable(params, \"access_token\")){ // means its spotify\n      this.exporting = \"spotify\"\n      console.log(\"sending spotify playlist\");\n      let state = JSON.parse(getQueryVariable(params, \"state\"));\n      const access_token = getQueryVariable(params, \"access_token\");\n      console.log(state);\n      \n      // get the user id\n      const meRes = await axios.get(\n        \"https://api.spotify.com/v1/me\",\n        {\n          headers:{\n            Authorization:`Bearer ${access_token}`\n          }\n        });\n      console.log(meRes);\n      \n      // create the playlist\n      let createRes = null;\n      if(EXPORT_SAFE){\n        try{\n          createRes = await axios({\n            method: 'post',\n            url: `https://api.spotify.com/v1/users/${meRes.data.id}/playlists`,\n            headers: {\n              Authorization:`Bearer ${access_token}`,\n              \"Content-Type\":\"application/json\",\n            }, \n            data: {\n              name:\"New Playlister Playlist\",\n              description:\"An awsome playlist created with playlister\"\n            }\n          });\n          console.log(createRes);\n        }catch(error){\n          console.log(error);\n          return;\n        }\n      }\n\n      // for each playlist convert it from [{id, platform}] to [spotifyUri]\n      // then sends them to spotify\n      for(let i=0; i<state.playlists.length;i++){\n        const playlistSongs = await this.convertPlaylist(state.playlists[i], \"spotify\");\n        console.log(playlistSongs);\n\n        // goes through songs 100 at a time\n        for(let page=0; page < Math.ceil(playlistSongs.length/100); page++){\n          const pageSongs = playlistSongs.slice(page*100, (page+1)*100)\n          // adds to final playlist\n          if(EXPORT_SAFE){\n            try{\n              const addRes = await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/playlists/${createRes.data.id}/tracks`,\n                headers: {\n                  Authorization:`Bearer ${access_token}`,\n                  \"Content-Type\":\"application/json\",\n                }, \n                data: JSON.stringify({\n                  uris:pageSongs\n                })\n              });\n              console.log(addRes);\n            }catch(error){\n              console.log(error);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async convertPlaylist(playlist, toPlatform){\n    // takes in a playlist {id, platform} and a desired platform\n    // returns ids for all the songs for desired platform\n\n    console.log(`converting ${playlist.id} from ${playlist.platform} to ${toPlatform}`)\n    \n    // uses addSongs beacuse it fetches all the songs already\n    await this.addSongs(null, playlist.platform, playlist.id);\n    // filter allSongs to just the playlist songs\n    // then call convertSong on each song\n    const allSongs = this.state.allSongs;\n    console.log(allSongs);\n    const theseSongs = allSongs.filter(song=>song.playlistId===playlist.id&&song.platform===playlist.platform);\n    console.log(theseSongs);\n    const convertedSongsPromises = theseSongs.map(song=>this.convertSong(song, toPlatform).catch(error=>{return error}));\n    const convertedSongs = await Promise.all(convertedSongsPromises);\n    console.log(convertedSongs);\n    // get uris/ids out of song returned song objects\n    let songsIds = []\n    for(let s=0; s<convertedSongs.length;s++){\n      try{\n        if(toPlatform === \"spotify\"){\n          songsIds.push(convertedSongs[s].track.uri)\n        }\n      }catch(error){\n        console.log(error);\n        console.log(`Could add #${s} ${theseSongs[s]}`)\n      }\n    }\n\n    return songsIds;\n  }\n\n  convertSong(song, toPlatform){\n    // takes a song {playlistId, platform + any info from song}\n    // finds it on toPlatform, returns a promise to the song on the new platform\n    // console.log(song);\n    if(toPlatform === \"spotify\"){\n      if(song.platform === toPlatform){\n        return new Promise((resolve, reject)=>{resolve(song)});\n      }\n      // uses the search feature too search for the song title\n      if(song.platform === \"youtube\"){\n        let songName = parseName(song.snippet.title)[0].replace(/\\s/g, \"+\");\n        return axios.get(`${serverUrl}/spotify/`, {\n          params:{\n            endpoint:`search?q=${songName}&type=track&limit=1`\n          }\n        }).then(res=>res.data.tracks.items[0].track);\n        // const outSong = res.data?.tracks?.items[0]\n      }\n    }\n    throw new Error(\"Not implimted\");\n  }\n\n  // filters song according to merge type\n  // takes all the songs as obj with keys per playlist\n  filterSongs(allSongs, _filterType){\n    let filterType = _filterType.toLowerCase()\n\n    // helper to get id out of a song object (beacuse its different for different platforms)\n    const getSongId = (song)=>{\n      if(song.platform === \"spotify\"){\n        return song.track.id\n      }else if(song.platform === \"youtube\"){\n        return song.etag\n      }\n    }\n    // dosent consider cross platformness (yet)\n    if(filterType === \"all\"){\n      // any song that is in all the playlists\n      console.log(\"filtering all\")\n\n      // combine all songs into one array\n      let songs = [];\n      for(let key in allSongs){\n        songs = songs.concat(allSongs[key])\n      }\n      // get ids\n      const allSongIds = songs.map(getSongId);\n      // removes duplicates\n      const singleSongIds = [...new Set(allSongIds)];\n      console.log(singleSongIds);\n      // finds ids that appear in every playlist\n      let songIds = []\n      let id;\n      for(let i=0; i<singleSongIds.length; i++){\n        id = singleSongIds[i];\n        if(allSongIds.filter(x => x === id).length >= Object.keys(allSongs).length){\n          songIds.push(id);\n        }\n      }\n\n      console.log(songIds);\n      // gets back songs from ids\n      let retSongs = []\n      // for each id\n      for(let i=0; i<songIds.length; i++){\n        // go through all the songs\n        for(let j=0; j<songs.length; j++){\n          let s = songs[j]\n          // untill you find one with the same id\n          if(getSongId(s) === songIds[i]){\n            retSongs.push(s);\n            break\n          }\n        }\n      }\n      console.log(retSongs);\n      return retSongs;\n    }\n    if(filterType === \"only\"){\n      console.log(\"filtering only\")\n      // any song that is in only one of the playlists\n\n    }\n    else{ // any\n      console.log(\"filtering any\");\n      // any song that is in any number of playlists\n      let songs = [];\n      for(var key in allSongs) {\n        songs = songs.concat(allSongs[key]);\n      }\n      return songs;\n    }\n  }\n}\n\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}