{"version":3,"sources":["utilities.js","SongsView.js","PlaylistsView.js","index.js"],"names":["getQueryVariable","query","variable","vars","split","i","length","pair","decodeURIComponent","console","log","serverUrl","parseName","title","newTitle","replace","blacklist","removeAfter","trim","toLowerCase","song","scrollOptions","damping","thumbMinSize","renderByPixels","document","alwaysShowTracks","continuousScrolling","overscrollOptions","enable","effect","navigator","userAgent","match","maxOverscroll","glowColor","MergeTypeRadio","props","className","data-tooltip","helpText","data-tooltip-persisten","type","name","id","text","defaultChecked","htmlFor","onClick","ExportButton","logoUrls","logoMult","logoSizes","logoSize","this","platform","logoUrl","export","disabled","alt","src","width","height","React","Component","SongItem","img","artists","SongsView","state","included","Array","excluded","songsItems","songs","map","val","idx","imgUrl","track","album","images","url","e","songId","x","join","toString","playlistId","snippet","thumbnails","default","videoOwnerChannelTitle","etag","mergeHelp","changeMergeType","Scrollbar","init","getElementById","plugins","overscroll","axios","require","PlaylistItemExtra","maxHeight","show","hovering","style","PlaylistItem","songsNum","extra","hover","decorate","bind","toggle","get","params","endpoint","then","catch","error","JSON","stringify","part","response","sendSongs","data","tracks","setState","total","items","contentDetails","itemCount","medium","slice","setHover","s","onMouseEnter","onMouseLeave","remove","info","PlaylistsView","textValue","handleChange","addPlaylist","watchEnter","playlistItems","playlists","removePlaylist","highlightHelp","showHelp","placeholder","value","onChange","onKeyPress","playlistLink","URL","search","substring","includes","parsePlatform","parsePlaylistId","event","target","evt","charCode","use","OverscrollPlugin","Main","exporting","hashParams","window","location","hash","regParams","allSongs","mergeType","helping","highlightingHelp","helpPage","interactTimeout","setTimeout","helpPageSelectorX","helpPageSelectorW","addSongs","authorize","convertPlaylist","convertSong","toggleHelp","helpPagesButtons","item","classNames","num","offsetWidth","offsetLeft","setHelpPage","opacity","pointerEvents","transform","left","filterSongs","prevRes","a","newTracks","Object","assign","key","newSongs","concat","next","res","paramsObj","maxResults","nextPageToken","pageToken","newPLaylists","urlParams","URLSearchParams","client_id","response_type","redirect_uri","origin","scope","paramsStr","entries","k","v","encodeURIComponent","href","parse","access_token","headers","Authorization","meRes","createRes","method","description","playlistSongs","page","Math","ceil","pageSongs","uris","addRes","playlist","toPlatform","theseSongs","filter","convertedSongsPromises","Promise","all","convertedSongs","songsIds","push","uri","resolve","reject","songName","Error","_filterType","filterType","getSongId","allSongIds","singleSongIds","Set","songIds","keys","retSongs","j","ReactDOM","render"],"mappings":"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","file":"static/js/main.899c1bd9.chunk.js","sourcesContent":["\nconst paramify = (params) => \"?\"+Object.entries(params).map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n\n// https://stackoverflow.com/questions/2090551/parse-query-string-in-javascript\nfunction getQueryVariable(query, variable) {\n  var vars = query.split('&');\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split('=');\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n  console.log('Query variable %s not found', variable);\n}\n\n\n// cost serverUrl = \"http://192.168.43.62:3003\"; // hotspot\n// const serverUrl = \"http://10.1.1.193:3003\"; // home\nconst serverUrl = \"https://sheltered-caverns-34537.herokuapp.com\"; // heroku\n\n\n\n// takes a title and tries to parse the name of the song (or a search term)\n// returns a list of ranked possibilities\nconst parseName = title=>{\n  // first makes it safe\n  // remove things in brackets\n  // remove things from blacklist (e.g. music video, feat)\n  // remove anything after 'ft.' 'feat' 'prod\n\n  // remove brackets [] and () and their content\n  let newTitle = title.replace(/\\([^\\)]*\\)/g, '');\n  newTitle = newTitle.replace(/\\[[^\\]]*\\]/g, '');\n\n  // making it safe\n  newTitle = sanitizeString(newTitle);\n  // remove duplicate spaces\n  newTitle = newTitle.replace( /\\s\\s+/g, ' ' );\n  \n  const blacklist = [\n    \"official music video\",\n    \"music video\",\n    \"official mv\",\n    \"video\",\n    \"official video\",\n    \"official visualizer\",\n    \"visualizer\",\n    \"audio\",\n    \"official audio\",\n  ];\n  const removeAfter = [\"ft.\", \" feat\", \"prod\"];\n\n  newTitle = newTitle.toLowerCase();\n\n  for(let i=0; i<blacklist.length;i++){\n    newTitle = newTitle.replace(blacklist[i], \"\");\n  }\n  // remove anything after ft or feat (feat gets featuring too)\n  for(let i=0; i<removeAfter.length;i++){\n    newTitle = newTitle.split(removeAfter[i])[0];\n  }\n  newTitle = newTitle.trim()\n\n\n  let song = newTitle.split(\"-\")\n  song = song[song.length-1].trim();\n\n  // remove dashes at end so you can get song name\n  newTitle = newTitle.replace(/[\\-+]/g, '');\n  // remove double space again\n  newTitle = newTitle.replace( /\\s\\s+/g, ' ');\n  \n  return [newTitle, song]\n}\n\n// https://stackoverflow.com/questions/23187013/is-there-a-better-way-to-sanitize-input-with-javascript\nfunction sanitizeString(str){\n  str = str.replace(/[^a-z0-9áéíóúñü \\.,_-]/gim,\"\");\n  return str.trim();\n}\n\nconst scrollOptions = {\n  damping: 0.1,\n  thumbMinSize: 20,\n  renderByPixels: !('ontouchstart' in document),\n  alwaysShowTracks: false,\n  continuousScrolling: true,\n};\n\nconst overscrollOptions = {\n  enable: true,\n  effect: navigator.userAgent.match(/Android/) ? 'glow' : 'bounce',\n  damping: 0.2,\n  maxOverscroll: 150,\n  glowColor: '#222a2d',\n};\n\nexport {\n  sanitizeString,\n  parseName,\n  serverUrl,\n  getQueryVariable,\n  paramify,\n  overscrollOptions,\n  scrollOptions\n}","import React from 'react';\nimport './index.css';\nimport Scrollbar from 'smooth-scrollbar';\nimport { parseName, scrollOptions, overscrollOptions } from './utilities';\n\n\nconst MergeTypeRadio = (props) => {\n  return (\n    <span className=\"mergeTypeOuter\" data-tooltip={props.helpText} data-tooltip-persisten>\n        <input type=\"radio\" name=\"mergeType\" id={props.text} className=\"mergeTypeInput\" defaultChecked></input>\n        <label className=\"mergeTypeLabel\" htmlFor={props.text} onClick={()=>props.onClick(props.type)}>{props.text}</label>\n    </span>\n  )\n}\n\nclass ExportButton extends React.Component{\n  constructor(props){\n    super(props);\n    this.logoUrls = {\n      \"spotify\":\"logos/spotify.png\",\n      \"download\":\"logos/download.png\", // TODO\n      \"soundcloud\":\"logos/soundcloud.png\", \n      \"youtube\":\"logos/youtube.png\",\n      \"apple\":\"logos/apple.svg\", // TODO\n    }\n    this.logoMult = 15;\n    this.logoSizes = {\n      \"spotify\":[1, 1],\n      \"download\":[1,1],\n      \"soundcloud\":[1.5, 1],\n      \"youtube\":[1.4, 1],\n      \"apple\":[1, 1]\n    }\n  }\n  render(){\n    let logoSize = this.logoSizes[this.props.platform];\n    let logoUrl = this.logoUrls[this.props.platform];\n    return (\n      <button\n        onClick={()=>this.props.export(this.props.platform)}\n        className={`exportButton noselect ${this.props.platform}Fill ${this.props.disabled ? \"disabled\":\"\"}`}\n      >\n        <img alt=\"\" src={logoUrl} width={`${logoSize[0]*this.logoMult}`} height={`${logoSize[1]*this.logoMult}`} className=\"exportButtonIcon\"></img>\n        {this.props.text}\n        \n      </button>\n    )\n  }\n}\n\nclass SongItem extends React.Component{\n  render(){\n    console.log(\"renderd songItem\")\n    return (\n      <div className=\"songItemExtra\">\n        <div className=\"songItem\">\n          <img alt=\"\" src={this.props.img} className=\"songItemImg\"></img>\n          <h3 className=\"songItemTitle\">{parseName(this.props.name)[0]}</h3>\n          <p className=\"songItemArtists\">{this.props.artists}</p>    \n        </div>\n      </div>\n    );\n  }\n}\n\nclass SongsView extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      included: Array(0),\n      excluded: Array(0),\n    }\n  }\n  render(){\n    // generates song items\n    const songsItems = this.props.songs.map((val, idx)=>{\n      if(val.platform === \"spotify\"){\n        let imgUrl;\n        try{\n          imgUrl = val.track.album.images[2].url;\n        }catch(e){\n          imgUrl = \"/spotify-default-thumb.png\";\n        }\n        const songId = val.track.id ?? idx\n        return <SongItem \n          key={songId.toString()+val.playlistId}\n          name={val.track.name}\n          img={imgUrl}\n          artists={val.track.artists.map((x)=>x.name).join(\", \")}\n        />\n      }\n      if(val.platform === \"youtube\"){\n        return <SongItem\n          key={val.etag}\n          name={val.snippet.title}\n          img={val.snippet.thumbnails.default.url}\n          artists={val.snippet.videoOwnerChannelTitle}\n        />\n      }\n      return null; // complains if there isnt an unconditional return\n    });\n\n    const mergeHelp = {\n      all:\"Songs in ALL playlists\",\n      only:\"Songs in ONLY ONE playlist\",\n      any:\"Songs in ANY NUMBER of playlists\",\n    }\n\n    return (\n      <div className=\"halfDiv\" id=\"songsViewContainer\">\n        <div id=\"songsTopBar\">\n          <div id=\"songsTopBarInfo\">\n            <p id=\"songsNum\">{this.props.songs.length} Songs</p>\n            {/* <p id=\"songsIncluded\">+{this.state.included.length}</p> */}\n            {/* <p id=\"songsExcluded\">-{this.state.excluded.length}</p> */}\n          </div>\n\n          <div id=\"songsTopBarType\">\n            <MergeTypeRadio text=\"All\"  type=\"all\"  onClick={this.props.changeMergeType} helpText={mergeHelp.all}/>\n            <MergeTypeRadio text=\"Only\" type=\"only\" onClick={this.props.changeMergeType} helpText={mergeHelp.only}/>\n            <MergeTypeRadio text=\"Any\"  type=\"any\"  onClick={this.props.changeMergeType} helpText={mergeHelp.any}/>\n          </div>\n        </div>\n        <div id=\"songsContainer\">\n          <div>{songsItems}</div>\n        </div>\n\n        <div id=\"songsExport\">\n          <ExportButton export={this.props.export} text=\"Spotify\" platform=\"spotify\" />\n          <ExportButton export={this.props.export} text=\"Youtube\" platform=\"youtube\" disabled={true} />\n          <ExportButton export={this.props.export} text=\"Apple Music\" platform=\"apple\" disabled={true} />\n          <ExportButton export={this.props.export} text=\"Download\" platform=\"download\" disabled={false} />\n        </div>\n\n      </div>\n    )\n  }\n  componentDidUpdate(){\n    Scrollbar.init(\n      document.getElementById('songsContainer'), {\n      plugins: {\n        overscroll: {...overscrollOptions},\n      },\n      ...scrollOptions\n    });\n  }\n}\n\nexport default SongsView","import React from 'react';\nimport { serverUrl, getQueryVariable, scrollOptions, overscrollOptions } from './utilities';\nimport Scrollbar from 'smooth-scrollbar';\nconst axios = require('axios'); // dont know difference between require and import\n\n\nclass PlaylistItemExtra extends React.Component{\n  render(){\n    console.log(\"rendered extra\");\n    let maxHeight = \"0\";\n    if(this.props.show){\n      maxHeight = \"200px\";\n    }else{\n      if(this.props.hovering){\n        maxHeight = \"20px\";\n      }\n    }\n\n    return (\n      <div style={{maxHeight:maxHeight}} className=\"playlistItemExtra\">\n        <div className=\"playlistItemExtraInner\">\n          <p className=\"playlistItemText\">penis</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass PlaylistItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      name: props.name,\n      songsNum: \"#\",\n      img: \"loading.svg\",\n      extra:false,\n      hover:false,\n    }\n\n    this.decorate = this.decorate.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    if( this.props.platform === \"spotify\"){\n      axios.get(`${serverUrl}/spotify/`, {\n        params: {endpoint:`playlists/${this.props.id}`}\n      })\n      .then(this.decorate)\n      .catch(function (error) {\n        console.log(error);\n      })\n    }\n    if( this.props.platform === \"youtube\"){\n      axios.get(`${serverUrl}/youtube`, {\n        params: {\n          endpoint:\"playlists\",\n          query: JSON.stringify({\n            part:\"snippet,contentDetails\",\n            id:this.props.id\n          })\n        }\n      })\n      .then(this.decorate)\n      .catch(function (error) {\n        console.log(error);\n      })\n      // playlists?part=snippet&part=contentDetails&part=id&part=status&id=RDCLAK5uy_kbqXHXB9aBQaqThDKOimGGcZEPubq3znc\n  \n    }\n  }\n  decorate(response){\n    console.log(response);\n    if(this.props.platform === \"spotify\"){\n      this.props.sendSongs(response.data.tracks, this.props.platform, this.props.id);\n      this.setState({\n        name: response.data.name,\n        songsNum:response.data.tracks.total,\n        img: response.data.images[0].url\n      })\n    }\n    if(this.props.platform === \"youtube\"){\n      this.props.sendSongs(null, this.props.platform, this.props.id);\n      this.setState({\n        name:response.data.items[0].snippet.title,\n        songsNum:response.data.items[0].contentDetails.itemCount,\n        img:response.data.items[0].snippet.thumbnails.medium.url,\n      });\n    }\n    if(this.state.name.length > 30){\n      this.setState({name:this.state.name.slice(0, 23)+\"...\"})\n    }\n  }\n  render(){\n    const setHover = (s)=>{this.setState({hovering:s})};\n\n    return (\n      <div className=\"playlistItemOuter\" onClick={this.toggle}>\n        <div \n          className={`playlistItem ${this.props.platform}Border`}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          <div className=\"playlistItemMain\">\n            <img src={this.state.img} className=\"playlistItemImage\" alt=\"\"></img>\n            <div className=\"playlistItemContent\">\n              <p className=\"playlistItemTitle\">{this.state.name}</p>\n              <p className=\"playlistItemSongsNum\">{`${this.state.songsNum} songs`}</p>\n            </div>\n          </div>\n          <div className=\"playlistItemCloseDiv\">\n            <button className=\"playlistItemRemove\" onClick={this.props.remove}>\n              <img className=\"playlistItemCloseImg\" src=\"close.svg\"></img>\n            </button>\n          </div>\n        </div>\n        <PlaylistItemExtra hovering={this.state.hovering} show={this.state.extra} info={{data:\"uhhhh\"}}/>\n      </div>\n    )\n  }\n  toggle(){\n    console.log(\"toggled\", this);\n    console.log(this.state.extra, !this.state.extra);\n    this.setState({extra: !this.state.extra});\n  }\n}\n\nclass PlaylistsView extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      textValue:\"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addPlaylist = this.addPlaylist.bind(this);\n    this.watchEnter = this.watchEnter.bind(this);\n  }\n  render(){\n    const playlistItems = this.props.playlists.map((val, idx) => {\n      const remover = ()=>this.props.removePlaylist(val.id, val.platform);\n      return <PlaylistItem\n        sendSongs={this.props.sendSongs}\n        remove={remover}\n        key={val.id+val.platform}\n        name=\"Loading...\"\n        id={val.id}\n        platform={val.platform}\n      />;\n    });\n\n    let helpStyles = this.props.highlightHelp?\"#666\":\"#ccc\";\n\n    return (\n      <div className=\"halfDiv\" id=\"playlistViewContainer\">\n        <div id=\"playlistSearchContainer\" className=\"\">\n          <p \n            className={this.props.highlightHelp?\"playlistHelpHighlight\":\"\"}\n            id=\"playlistHelp\" onClick={this.props.showHelp}>Help</p>\n\n          <input\n            id=\"playlistSearch\"\n            type=\"text\"\n            placeholder=\"Playlist Link\"\n            value={this.state.textValue}\n            onChange={this.handleChange}\n            onKeyPress={this.watchEnter}>\n          </input>\n          <button id=\"playlistAdd\" type=\"button\" onClick={this.addPlaylist}>+</button> \n          {/* <span className=\"tooltiptext\"><a id=\"tooltipHelpLink\" href=\"help\">Help</a></span> */}\n        </div>\n        <div id=\"playlistsContainer\">\n          <div id=\"playlistsInnerContainer\">\n            {playlistItems}\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n  componentDidUpdate(){\n    Scrollbar.init(\n      document.getElementById('playlistsContainer'), {\n      plugins: {\n        overscroll: {...overscrollOptions},\n      },\n      ...scrollOptions\n    });\n  }\n  parsePlaylistId(playlistLink, platform){\n    // returns: playlistId, platform\n    if(platform === \"spotify\"){\n      let s = playlistLink.split(\"/\");\n      return s[s.length-1].split(\"?\")[0];\n    }\n    if(platform === \"youtube\"){\n      let params = new URL(playlistLink).search.substring(1)\n      console.log(params)\n      return getQueryVariable(params, \"list\")\n    }\n  }\n  parsePlatform(playlistLink){\n    let s = playlistLink.split(\"/\");\n    if( s.includes(\"open.spotify.com\")){\n      return \"spotify\";\n    }\n    if( s.includes(\"youtube.com\") || s.includes(\"music.youtube.com\")){\n      return \"youtube\";\n    }\n  }\n  addPlaylist(){\n    let platform = this.parsePlatform(this.state.textValue);\n    let id = this.parsePlaylistId(this.state.textValue, platform);\n    this.props.addPlaylist(id, platform);\n    this.setState({textValue:\"\"});\n  }\n  handleChange(event) {\n    this.setState({textValue: event.target.value});\n  }\n  watchEnter(evt){\n    if(evt.charCode === 13){\n      this.addPlaylist();\n    }\n  }\n}\n\nexport default PlaylistsView","import Scrollbar from 'smooth-scrollbar';\nimport OverscrollPlugin from 'smooth-scrollbar/plugins/overscroll';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SongsView from './SongsView.js';\nimport PlaylistsView from './PlaylistsView.js';\nimport { serverUrl, getQueryVariable, parseName, paramify } from './utilities.js';\nconst axios = require('axios'); // dont know difference between require and import\n\nScrollbar.use(OverscrollPlugin);\n\n// to stop creating tones of playlists when testing\nconst EXPORT_SAFE = true;\n\nclass Main extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.exporting = false\n    const hashParams = window.location.hash.slice(1); // spotify redirect uses hash\n    const regParams = window.location.search.slice(1);\n    if(hashParams || regParams){\n      console.log('set exporting')\n      this.export(hashParams || regParams);\n    }\n\n    this.state = {\n      allSongs: {},\n      playlists: Array(0),\n      exporting:this.exporting,\n      mergeType:\"Any\",\n      helping:false,\n      highlightingHelp:false,\n      helpPage:0,\n    }\n\n    const needsHelp = ()=>{\n      // if the user hasnt added a playlist after some seconds\n      // highlight the help button\n      console.log(\"highlighted help\");\n      if(this.state.playlists.length === 0 && this.state.helping === false){\n        this.setState({highlightingHelp:true});\n      }\n    }\n    this.interactTimeout = setTimeout(needsHelp, 5000);\n\n    this.helpPageSelectorX = 0;\n    this.helpPageSelectorW = \n\n    this.addSongs = this.addSongs.bind(this); \n    this.addPlaylist = this.addPlaylist.bind(this);\n    this.removePlaylist = this.removePlaylist.bind(this);\n    this.export = this.export.bind(this);\n    this.authorize = this.authorize.bind(this);\n    this.convertPlaylist = this.convertPlaylist.bind(this);\n    this.convertSong = this.convertSong.bind(this);\n  }\n\n  render(){\n\n    // callback used by SongsView to set the merge type state\n    const setMergeType = type=>{this.setState({mergeType:type})}\n\n    const toggleHelp = ()=>{this.setState({helping:!this.state.helping, highlightingHelp:false})};\n\n    const setHelpPage = (e, num)=>{\n      this.helpPageSelectorW=e.target.offsetWidth;\n      this.helpPageSelectorX=e.target.offsetLeft;\n      this.setState({helpPage:num})\n    };\n\n    const helpPagesButtonInfo = [\n      {text:\"Spotify\"},\n      {text:\"Youtube\"},\n      {text:\"Apple Music\"},\n    ]\n    const helpPagesButtons = helpPagesButtonInfo.map((item, idx)=>{\n      let classNames = \"helpPlatformBarItem noselect \"\n      if(idx == this.state.helpPage){\n        classNames += \"helpPlatformBarButtonSelected\"\n      }\n      return <span\n        key={idx}\n        // style={{backgroundColor:(idx===this.state.helpPage)?\"#333\":\"#222\"}}\n        className={classNames}\n        onClick={e=>setHelpPage(e, idx)}>{item.text}\n      </span>\n    });\n\n    return (\n      <div id=\"main\">\n        {this.state.exporting &&\n          <div id=\"exportOverlayOuter\">\n            <div id=\"darkOverlayBackground\"></div>\n            <div id=\"darkOverlay\">\n              <h2 id=\"exportingTitle\">Exporting {this.state.allSongs.length} song(s) to {this.state.exporting}</h2>\n            </div>\n          </div>\n        }\n        <div id=\"helpOverlayOuter\">\n          <div\n            id=\"darkOverlayBackground\"\n            onClick={toggleHelp}\n            style={{opacity:this.state.helping?0.4:0, pointerEvents: this.state.helping?\"auto\":\"none\"}}>\n          </div>\n          <div id=\"darkOverlay\" style={\n            {transform:this.state.helping?\"translate(-50%, -50%)\":\"translate(-50%, -180%)\",\n            pointerEvents: this.state.helping?\"auto\":\"none\"}\n          }>\n            <span id=\"helpPlatformBar\">\n              {helpPagesButtons}\n              {/* <span className=\"helpPlatformBarItem\" onClick={e=>setHelpPage(e, 0)}>Spotify</span>\n              <span className=\"helpPlatformBarItem\" onClick={e=>setHelpPage(e, 1)}>Youtube</span>\n              <span className=\"helpPlatformBarItem\" onClick={e=>setHelpPage(e, 2)}>Apple Music</span> */}\n              {/* first one has a 'underline' */}\n              <div id=\"helpPlatformBarSelector\" style={{left:this.helpPageSelectorX+\"px\", width:this.helpPageSelectorW+\"px\"}}></div> \n            </span>\n            <div id=\"helpOverlayContent\">\n              <h1 id=\"helpingTitle\">To get </h1>\n            </div>\n          </div>\n        </div>\n        <header></header>\n        <div id=\"content\">\n\n          <PlaylistsView\n            addPlaylist={this.addPlaylist}\n            sendSongs={this.addSongs}\n            playlists={this.state.playlists}\n            removePlaylist={this.removePlaylist}\n            showHelp={toggleHelp}\n            highlightHelp={this.state.highlightingHelp}\n          />\n          {/* make selectedSongs later */}\n          <SongsView\n            songs={this.filterSongs(this.state.allSongs, this.state.mergeType)}\n            export={this.authorize}\n            changeMergeType={setMergeType}\n          />\n\n          <hr id=\"midBreak\"></hr>\n        </div>\n      </div>\n    );\n  }\n\n  async addSongs(prevRes, platform, id){\n    // takes the previous respose, adds its songs to the songs lists\n    // then requests the next group of songs by calling its self\n    // or if no prevRes, request the first group of songs\n    console.log(prevRes);\n\n    // add the songs from prevRes\n    // adds the playlist id and platform to each track\n    if(prevRes){\n      console.log(\"had prev res\");\n      const newTracks = prevRes.items.map((val, idx) => {\n        return Object.assign(val, {playlistId:id, platform:platform})\n      })\n      let key = platform.toString()+id.toString();\n      let newSongs = {...this.state.allSongs};\n      if(key in newSongs){\n        newSongs[key] = newSongs[key].concat(newTracks)\n      }else{\n        newSongs[key] = newTracks;\n      }\n      this.setState({allSongs:newSongs});\n    }\n\n    if(platform === \"spotify\"){\n      const url = `${serverUrl}/spotify/`;\n      let endpoint;\n      if(prevRes){\n        if(prevRes.next != null){ // if you had a prevRes and there is a next\n          endpoint = prevRes.next.split(\"v1/\")[1]\n        }else{ // if you had a prevRes but there is not next\n          console.log(\"reached end of playlist\");\n          return;\n        }\n      }else{ // no prevRes\n        endpoint = `playlists/${id}/tracks/?offset=0&limit=100`;\n      }\n      let res = await axios.get(url, {\n        params:{\n          endpoint:endpoint\n        }\n      });\n      await this.addSongs(res.data, platform, id);\n    }\n    if(platform === \"youtube\"){\n      let paramsObj = {\n        part:\"snippet\",\n        maxResults:50,\n        playlistId:id,\n      }\n\n      if(prevRes){ // dont do for first request\n        if(prevRes.nextPageToken){\n          paramsObj.pageToken = prevRes.nextPageToken;\n        }\n      }\n\n      // do a request if either there wasnt a previose request (prevRes is null)\n      // or there is a nextPageToken from the last request\n      if(paramsObj.pageToken || !(prevRes)){\n        let res = await axios.get(`${serverUrl}/youtube/`, {\n          params: {\n            endpoint:\"playlistItems\",\n            query:JSON.stringify(paramsObj)\n          }\n        })\n        await this.addSongs(res.data, platform, id)\n      }\n    }\n    return this.state.allSongs;\n  }\n\n  addPlaylist(id, platform){\n    const newPLaylists = this.state.playlists.concat({id:id, platform:platform});\n    this.setState({playlists: newPLaylists, highlightingHelp: false});\n  }\n\n  removePlaylist(id, platform){\n    // findes the index of the playlist with given id and platform and removes it\n    let idx = -1;\n    for(let i = 0; i < this.state.playlists.length; i++){\n      console.log(this.state.playlists[i], {id, platform})\n      if(this.state.playlists[i].id === id && this.state.playlists[i].platform === platform){\n        console.log(\"found match\");\n        idx = i;\n      }\n    }\n    if(idx === -1){\n      console.log(\"invalid id to remove\");\n      return;\n    }\n    const newPLaylists = [...this.state.playlists.slice(0, idx), ...this.state.playlists.slice(idx+1)];\n    // const newSongs = this.state.allSongs.filter( s=> !(s.playlistId===id && s.platform===platform) );\n    const key = platform.toString()+id.toString()\n    const { [key]: _, ...newSongs } = this.state.allSongs;\n    console.log(newSongs.length);\n    this.setState({playlists:newPLaylists, allSongs:newSongs});\n  }\n\n  // first step of exporting, redirects to spotify, gives a url to return to\n  // and a state to have as params on return\n  authorize(platform){\n    console.log(platform);\n    const urlParams = new URLSearchParams(window.location.search);\n    console.log(urlParams);\n    if(platform === \"spotify\"){\n      const paramsObj = {\n        client_id:'e9901c5f654f4f58abb0d07a723dfd30',\n        response_type:'token',\n        redirect_uri:window.location.origin,\n        state:JSON.stringify({exporting:\"spotify\", playlists:this.state.playlists, mergeType:this.state.mergeType}),\n        scope:\"playlist-modify-private playlist-modify-public\",\n      }\n      const paramsStr = paramify(paramsObj);\n      window.location.href = \"https://accounts.spotify.com/authorize\"+paramsStr;\n    }\n  }\n\n  // called after the return from spotify auth\n  async export(params){\n\n    // called when there are hash or querey parameters to export a playlist\n    if(getQueryVariable(params, \"access_token\")){ // means its spotify\n      this.exporting = \"spotify\"\n      console.log(\"sending spotify playlist\");\n      let state = JSON.parse(getQueryVariable(params, \"state\"));\n      const access_token = getQueryVariable(params, \"access_token\");\n      console.log(state);\n      \n      // get the user id\n      const meRes = await axios.get(\n        \"https://api.spotify.com/v1/me\",\n        {\n          headers:{\n            Authorization:`Bearer ${access_token}`\n          }\n        });\n      console.log(meRes);\n      \n      // create the playlist\n      let createRes = null;\n      if(EXPORT_SAFE){\n        try{\n          createRes = await axios({\n            method: 'post',\n            url: `https://api.spotify.com/v1/users/${meRes.data.id}/playlists`,\n            headers: {\n              Authorization:`Bearer ${access_token}`,\n              \"Content-Type\":\"application/json\",\n            }, \n            data: {\n              name:\"New Playlister Playlist\",\n              description:\"An awsome playlist created with playlister\"\n            }\n          });\n          console.log(createRes);\n        }catch(error){\n          console.log(error);\n          return;\n        }\n      }\n\n      // for each playlist convert it from [{id, platform}] to [spotifyUri]\n      // then sends them to spotify\n      for(let i=0; i<state.playlists.length;i++){\n        const playlistSongs = await this.convertPlaylist(state.playlists[i], \"spotify\");\n        console.log(playlistSongs);\n\n        // goes through songs 100 at a time\n        for(let page=0; page < Math.ceil(playlistSongs.length/100); page++){\n          const pageSongs = playlistSongs.slice(page*100, (page+1)*100)\n          // adds to final playlist\n          if(EXPORT_SAFE){\n            try{\n              const addRes = await axios({\n                method: 'post',\n                url: `https://api.spotify.com/v1/playlists/${createRes.data.id}/tracks`,\n                headers: {\n                  Authorization:`Bearer ${access_token}`,\n                  \"Content-Type\":\"application/json\",\n                }, \n                data: JSON.stringify({\n                  uris:pageSongs\n                })\n              });\n              console.log(addRes);\n            }catch(error){\n              console.log(error);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async convertPlaylist(playlist, toPlatform){\n    // takes in a playlist {id, platform} and a desired platform\n    // returns ids for all the songs for desired platform\n\n    console.log(`converting ${playlist.id} from ${playlist.platform} to ${toPlatform}`)\n    \n    // uses addSongs beacuse it fetches all the songs already\n    await this.addSongs(null, playlist.platform, playlist.id);\n    // filter allSongs to just the playlist songs\n    // then call convertSong on each song\n    const allSongs = this.state.allSongs;\n    console.log(allSongs);\n    const theseSongs = allSongs.filter(song=>song.playlistId===playlist.id&&song.platform===playlist.platform);\n    console.log(theseSongs);\n    const convertedSongsPromises = theseSongs.map(song=>this.convertSong(song, toPlatform).catch(error=>{return error}));\n    const convertedSongs = await Promise.all(convertedSongsPromises);\n    console.log(convertedSongs);\n    // get uris/ids out of song returned song objects\n    let songsIds = []\n    for(let s=0; s<convertedSongs.length;s++){\n      try{\n        if(toPlatform === \"spotify\"){\n          songsIds.push(convertedSongs[s].track.uri)\n        }\n      }catch(error){\n        console.log(error);\n        console.log(`Could add #${s} ${theseSongs[s]}`)\n      }\n    }\n\n    return songsIds;\n  }\n\n  convertSong(song, toPlatform){\n    // takes a song {playlistId, platform + any info from song}\n    // finds it on toPlatform, returns a promise to the song on the new platform\n    // console.log(song);\n    if(toPlatform === \"spotify\"){\n      if(song.platform === toPlatform){\n        return new Promise((resolve, reject)=>{resolve(song)});\n      }\n      // uses the search feature too search for the song title\n      if(song.platform === \"youtube\"){\n        let songName = parseName(song.snippet.title)[0].replace(/\\s/g, \"+\");\n        return axios.get(`${serverUrl}/spotify/`, {\n          params:{\n            endpoint:`search?q=${songName}&type=track&limit=1`\n          }\n        }).then(res=>res.data.tracks.items[0].track);\n        // const outSong = res.data?.tracks?.items[0]\n      }\n    }\n    throw new Error(\"Not implimted\");\n  }\n\n  // filters song according to merge type\n  // takes all the songs as obj with keys per playlist\n  filterSongs(allSongs, _filterType){\n    let filterType = _filterType.toLowerCase()\n\n    // helper to get id out of a song object (beacuse its different for different platforms)\n    const getSongId = (song)=>{\n      if(song.platform === \"spotify\"){\n        return song.track.id\n      }else if(song.platform === \"youtube\"){\n        return song.etag\n      }\n    }\n    // dosent consider cross platformness (yet)\n    if(filterType === \"all\"){\n      // any song that is in all the playlists\n      console.log(\"filtering all\")\n\n      // combine all songs into one array\n      let songs = [];\n      for(let key in allSongs){\n        songs = songs.concat(allSongs[key])\n      }\n      // get ids\n      const allSongIds = songs.map(getSongId);\n      // removes duplicates\n      const singleSongIds = [...new Set(allSongIds)];\n      console.log(singleSongIds);\n      // finds ids that appear in every playlist\n      let songIds = []\n      let id;\n      for(let i=0; i<singleSongIds.length; i++){\n        id = singleSongIds[i];\n        if(allSongIds.filter(x => x === id).length >= Object.keys(allSongs).length){\n          songIds.push(id);\n        }\n      }\n\n      console.log(songIds);\n      // gets back songs from ids\n      let retSongs = []\n      // for each id\n      for(let i=0; i<songIds.length; i++){\n        // go through all the songs\n        for(let j=0; j<songs.length; j++){\n          let s = songs[j]\n          // untill you find one with the same id\n          if(getSongId(s) === songIds[i]){\n            retSongs.push(s);\n            break\n          }\n        }\n      }\n      console.log(retSongs);\n      return retSongs;\n    }\n    if(filterType === \"only\"){\n      console.log(\"filtering only\")\n      // any song that is in only one of the playlists\n      return []\n    }\n    else{ // any\n      console.log(\"filtering any\");\n      // any song that is in any number of playlists\n      let songs = [];\n      for(var key in allSongs) {\n        songs = songs.concat(allSongs[key]);\n      }\n      return songs;\n    }\n  }\n}\n\n\nReactDOM.render(\n    <Main />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}